(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{350:function(t,a,s){"use strict";s.r(a);var n=s(15),e=Object(n.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"热点处理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#热点处理"}},[t._v("#")]),t._v(" 热点处理")]),t._v(" "),a("p",[t._v("只需要加上"),a("code",[t._v("@AkaliHot")]),t._v("这个标注，任意方法均可以获得热点检测，并在热点期间用热点数据进行返回，在热点过后，又会自动调用原本业务逻辑。")]),t._v(" "),a("p",[t._v("举例：比如有一个商品查询的业务，传入SkuCode，返回商品信息。当某个商品进行促销时，访问的量就会增加，但是对于相同的SkuCode而言，其短时间窗口内返回的SkuInfo是一致的，我们的目标是当某个商品sku被大量查询时，框架能够在短时间内把这个商品sku提为热点数据，并通过对其进行缓存返回来降低对下游业务的压力。而当热点值过后，框架又能够自动摘除这个热点值，使其按照原有方式进行查询。")]),t._v(" "),a("p",[t._v("其本质相当于实时的监测了热点，并对其热点数据做了一个短时间内的缓存。")]),t._v(" "),a("p",[t._v("以下示例代表了：当相同的skuCode在5秒内超过50次调用时，会自动把这个skuCode的值提为热点，并用最后一次的返回值直接返回。当调用低于5秒50次调用时，框架会自动的摘除掉这个热点。使其正常的调用你原有代码进行逻辑计算并返回。这一切都是自动的。")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AkaliHot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("grade "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FlowGradeEnum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FLOW_GRADE_QPS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" duration "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SkuInfo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSkuInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" skuCode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//do your biz and return sku info")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("其中"),a("code",[t._v("grade")]),t._v("参数除了有以"),a("code",[t._v("QPS")]),t._v("作为维度统计，还有以"),a("code",[t._v("Thread")]),t._v("个数作为维度统计。比如：")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AkaliHot")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("grade "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("FlowGradeEnum")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("FLOW_GRADE_THREAD")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" count "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" duration "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SkuInfo")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSkuInfo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" skuCode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//do your biz and return sku info")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("这就代表了，如果某个skuCode在5秒之内有超过50个线程正在运行，那么就提为热点，并用热点数据直接返回。")]),t._v(" "),a("h2",{attrs:{id:"热点缓存的更新"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#热点缓存的更新"}},[t._v("#")]),t._v(" 热点缓存的更新")]),t._v(" "),a("p",[t._v("如果一个方法的参数被提为热点后，在1分钟内都将用热点数据返回。1分钟后如果你的热点依旧存在，那么会触发第二次热点，第二次热点会重新查询你的数据，并缓存起来。在第二分钟内会用这份数据进行返回。以此类推。")]),t._v(" "),a("p",[t._v("所以，请确保你的接口符合"),a("strong",[t._v("在短时间窗口内是能保证幂等性的，如果你的接口返回的数据每时每刻都在发生变化，那么Akali并不适合")]),t._v("。这点很重要。")]),t._v(" "),a("h2",{attrs:{id:"对rpc框架的支持度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对rpc框架的支持度"}},[t._v("#")]),t._v(" 对RPC框架的支持度")]),t._v(" "),a("p",[t._v("支持任何RPC框架，诸如dubbo，open feign的provider端的热点处理。你完全可以把"),a("code",[t._v("@AkaliHot")]),t._v("标注在以上框架的provider端，标注在接口方法上或者实现类方法上均可以。")]),t._v(" "),a("h2",{attrs:{id:"对于热点处理的一些忠告"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对于热点处理的一些忠告"}},[t._v("#")]),t._v(" 对于热点处理的一些忠告")]),t._v(" "),a("p",[t._v("尽量标注在一定时间范围内幂等的方法上，比如查询用户，查询订单等接口，这些接口方法在小范围时间窗口内是相对幂等的。")]),t._v(" "),a("p",[t._v("如果你标注在事务性操作的方法上，比如库存扣减，那么热点触发后，可能会造成业务的错乱。因为这些业务方法本来就不是幂等的。")]),t._v(" "),a("p",[t._v("所以使用之前要对业务进行考量，不能瞎用，这属于使用不当，而不是框架的责任。")])])}),[],!1,null,null,null);a.default=e.exports}}]);